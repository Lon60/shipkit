name: Build & Push Docker Images

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-push:
    name: Build & Push Images
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Read version
        id: vars
        run: echo "version=$(cat VERSION | tr -d '[:space:]')" >> $GITHUB_OUTPUT

      - name: Set lowercase owner
        id: owner
        run: echo "owner=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_OUTPUT

      - name: Build & push docker-control image
        uses: docker/build-push-action@v5
        with:
          context: ./docker-control
          push: true
          tags: ghcr.io/${{ steps.owner.outputs.owner }}/shipkit-docker-control:latest,ghcr.io/${{ steps.owner.outputs.owner }}/shipkit-docker-control:${{ steps.vars.outputs.version }}

      - name: Build & push gateway-api image
        uses: docker/build-push-action@v5
        with:
          context: ./gateway-api
          push: true
          tags: ghcr.io/${{ steps.owner.outputs.owner }}/shipkit-gateway-api:latest,ghcr.io/${{ steps.owner.outputs.owner }}/shipkit-gateway-api:${{ steps.vars.outputs.version }}

      - name: Build & push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ghcr.io/${{ steps.owner.outputs.owner }}/shipkit-frontend:latest,ghcr.io/${{ steps.owner.outputs.owner }}/shipkit-frontend:${{ steps.vars.outputs.version }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ steps.vars.outputs.version }}"
          name: "shipkit ${{ steps.vars.outputs.version }}"
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 