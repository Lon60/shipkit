// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: proto/docker_control.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AppState int32

const (
	AppState_UNKNOWN  AppState = 0
	AppState_RUNNING  AppState = 1
	AppState_STOPPED  AppState = 2
	AppState_STARTING AppState = 3
	AppState_STOPPING AppState = 4
	AppState_ERROR    AppState = 5
)

// Enum value maps for AppState.
var (
	AppState_name = map[int32]string{
		0: "UNKNOWN",
		1: "RUNNING",
		2: "STOPPED",
		3: "STARTING",
		4: "STOPPING",
		5: "ERROR",
	}
	AppState_value = map[string]int32{
		"UNKNOWN":  0,
		"RUNNING":  1,
		"STOPPED":  2,
		"STARTING": 3,
		"STOPPING": 4,
		"ERROR":    5,
	}
)

func (x AppState) Enum() *AppState {
	p := new(AppState)
	*p = x
	return p
}

func (x AppState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppState) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_docker_control_proto_enumTypes[0].Descriptor()
}

func (AppState) Type() protoreflect.EnumType {
	return &file_proto_docker_control_proto_enumTypes[0]
}

func (x AppState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppState.Descriptor instead.
func (AppState) EnumDescriptor() ([]byte, []int) {
	return file_proto_docker_control_proto_rawDescGZIP(), []int{0}
}

type StartComposeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ComposeYaml   string                 `protobuf:"bytes,2,opt,name=compose_yaml,json=composeYaml,proto3" json:"compose_yaml,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartComposeRequest) Reset() {
	*x = StartComposeRequest{}
	mi := &file_proto_docker_control_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartComposeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartComposeRequest) ProtoMessage() {}

func (x *StartComposeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_docker_control_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartComposeRequest.ProtoReflect.Descriptor instead.
func (*StartComposeRequest) Descriptor() ([]byte, []int) {
	return file_proto_docker_control_proto_rawDescGZIP(), []int{0}
}

func (x *StartComposeRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *StartComposeRequest) GetComposeYaml() string {
	if x != nil {
		return x.ComposeYaml
	}
	return ""
}

type StopAppRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopAppRequest) Reset() {
	*x = StopAppRequest{}
	mi := &file_proto_docker_control_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopAppRequest) ProtoMessage() {}

func (x *StopAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_docker_control_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopAppRequest.ProtoReflect.Descriptor instead.
func (*StopAppRequest) Descriptor() ([]byte, []int) {
	return file_proto_docker_control_proto_rawDescGZIP(), []int{1}
}

func (x *StopAppRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStatusRequest) Reset() {
	*x = GetStatusRequest{}
	mi := &file_proto_docker_control_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusRequest) ProtoMessage() {}

func (x *GetStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_docker_control_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusRequest.ProtoReflect.Descriptor instead.
func (*GetStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_docker_control_proto_rawDescGZIP(), []int{2}
}

func (x *GetStatusRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type ActionResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        int32                  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Details       string                 `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActionResult) Reset() {
	*x = ActionResult{}
	mi := &file_proto_docker_control_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResult) ProtoMessage() {}

func (x *ActionResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_docker_control_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionResult.ProtoReflect.Descriptor instead.
func (*ActionResult) Descriptor() ([]byte, []int) {
	return file_proto_docker_control_proto_rawDescGZIP(), []int{3}
}

func (x *ActionResult) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ActionResult) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ActionResult) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

type AppStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	State         AppState               `protobuf:"varint,2,opt,name=state,proto3,enum=docker_control.AppState" json:"state,omitempty"`
	Containers    []*ContainerStatus     `protobuf:"bytes,3,rep,name=containers,proto3" json:"containers,omitempty"`
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Status        int32                  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppStatus) Reset() {
	*x = AppStatus{}
	mi := &file_proto_docker_control_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppStatus) ProtoMessage() {}

func (x *AppStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_docker_control_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppStatus.ProtoReflect.Descriptor instead.
func (*AppStatus) Descriptor() ([]byte, []int) {
	return file_proto_docker_control_proto_rawDescGZIP(), []int{4}
}

func (x *AppStatus) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *AppStatus) GetState() AppState {
	if x != nil {
		return x.State
	}
	return AppState_UNKNOWN
}

func (x *AppStatus) GetContainers() []*ContainerStatus {
	if x != nil {
		return x.Containers
	}
	return nil
}

func (x *AppStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AppStatus) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ContainerStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	State         string                 `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Health        string                 `protobuf:"bytes,3,opt,name=health,proto3" json:"health,omitempty"`
	Ports         []string               `protobuf:"bytes,4,rep,name=ports,proto3" json:"ports,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerStatus) Reset() {
	*x = ContainerStatus{}
	mi := &file_proto_docker_control_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerStatus) ProtoMessage() {}

func (x *ContainerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_docker_control_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerStatus.ProtoReflect.Descriptor instead.
func (*ContainerStatus) Descriptor() ([]byte, []int) {
	return file_proto_docker_control_proto_rawDescGZIP(), []int{5}
}

func (x *ContainerStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerStatus) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ContainerStatus) GetHealth() string {
	if x != nil {
		return x.Health
	}
	return ""
}

func (x *ContainerStatus) GetPorts() []string {
	if x != nil {
		return x.Ports
	}
	return nil
}

type ReloadNginxRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerName string                 `protobuf:"bytes,1,opt,name=container_name,json=containerName,proto3" json:"container_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReloadNginxRequest) Reset() {
	*x = ReloadNginxRequest{}
	mi := &file_proto_docker_control_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReloadNginxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReloadNginxRequest) ProtoMessage() {}

func (x *ReloadNginxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_docker_control_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReloadNginxRequest.ProtoReflect.Descriptor instead.
func (*ReloadNginxRequest) Descriptor() ([]byte, []int) {
	return file_proto_docker_control_proto_rawDescGZIP(), []int{6}
}

func (x *ReloadNginxRequest) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

var File_proto_docker_control_proto protoreflect.FileDescriptor

const file_proto_docker_control_proto_rawDesc = "" +
	"\n" +
	"\x1aproto/docker_control.proto\x12\x0edocker_control\"L\n" +
	"\x13StartComposeRequest\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12!\n" +
	"\fcompose_yaml\x18\x02 \x01(\tR\vcomposeYaml\"$\n" +
	"\x0eStopAppRequest\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\"&\n" +
	"\x10GetStatusRequest\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\"Z\n" +
	"\fActionResult\x12\x16\n" +
	"\x06status\x18\x01 \x01(\x05R\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x18\n" +
	"\adetails\x18\x03 \x01(\tR\adetails\"\xc2\x01\n" +
	"\tAppStatus\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12.\n" +
	"\x05state\x18\x02 \x01(\x0e2\x18.docker_control.AppStateR\x05state\x12?\n" +
	"\n" +
	"containers\x18\x03 \x03(\v2\x1f.docker_control.ContainerStatusR\n" +
	"containers\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12\x16\n" +
	"\x06status\x18\x05 \x01(\x05R\x06status\"i\n" +
	"\x0fContainerStatus\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05state\x18\x02 \x01(\tR\x05state\x12\x16\n" +
	"\x06health\x18\x03 \x01(\tR\x06health\x12\x14\n" +
	"\x05ports\x18\x04 \x03(\tR\x05ports\";\n" +
	"\x12ReloadNginxRequest\x12%\n" +
	"\x0econtainer_name\x18\x01 \x01(\tR\rcontainerName*X\n" +
	"\bAppState\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aRUNNING\x10\x01\x12\v\n" +
	"\aSTOPPED\x10\x02\x12\f\n" +
	"\bSTARTING\x10\x03\x12\f\n" +
	"\bSTOPPING\x10\x04\x12\t\n" +
	"\x05ERROR\x10\x052\xcd\x02\n" +
	"\x14DockerControlService\x12Q\n" +
	"\fStartCompose\x12#.docker_control.StartComposeRequest\x1a\x1c.docker_control.ActionResult\x12G\n" +
	"\aStopApp\x12\x1e.docker_control.StopAppRequest\x1a\x1c.docker_control.ActionResult\x12H\n" +
	"\tGetStatus\x12 .docker_control.GetStatusRequest\x1a\x19.docker_control.AppStatus\x12O\n" +
	"\vReloadNginx\x12\".docker_control.ReloadNginxRequest\x1a\x1c.docker_control.ActionResultB)Z'github.com/shipkit/docker-control/protob\x06proto3"

var (
	file_proto_docker_control_proto_rawDescOnce sync.Once
	file_proto_docker_control_proto_rawDescData []byte
)

func file_proto_docker_control_proto_rawDescGZIP() []byte {
	file_proto_docker_control_proto_rawDescOnce.Do(func() {
		file_proto_docker_control_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_docker_control_proto_rawDesc), len(file_proto_docker_control_proto_rawDesc)))
	})
	return file_proto_docker_control_proto_rawDescData
}

var file_proto_docker_control_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_docker_control_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_docker_control_proto_goTypes = []any{
	(AppState)(0),               // 0: docker_control.AppState
	(*StartComposeRequest)(nil), // 1: docker_control.StartComposeRequest
	(*StopAppRequest)(nil),      // 2: docker_control.StopAppRequest
	(*GetStatusRequest)(nil),    // 3: docker_control.GetStatusRequest
	(*ActionResult)(nil),        // 4: docker_control.ActionResult
	(*AppStatus)(nil),           // 5: docker_control.AppStatus
	(*ContainerStatus)(nil),     // 6: docker_control.ContainerStatus
	(*ReloadNginxRequest)(nil),  // 7: docker_control.ReloadNginxRequest
}
var file_proto_docker_control_proto_depIdxs = []int32{
	0, // 0: docker_control.AppStatus.state:type_name -> docker_control.AppState
	6, // 1: docker_control.AppStatus.containers:type_name -> docker_control.ContainerStatus
	1, // 2: docker_control.DockerControlService.StartCompose:input_type -> docker_control.StartComposeRequest
	2, // 3: docker_control.DockerControlService.StopApp:input_type -> docker_control.StopAppRequest
	3, // 4: docker_control.DockerControlService.GetStatus:input_type -> docker_control.GetStatusRequest
	7, // 5: docker_control.DockerControlService.ReloadNginx:input_type -> docker_control.ReloadNginxRequest
	4, // 6: docker_control.DockerControlService.StartCompose:output_type -> docker_control.ActionResult
	4, // 7: docker_control.DockerControlService.StopApp:output_type -> docker_control.ActionResult
	5, // 8: docker_control.DockerControlService.GetStatus:output_type -> docker_control.AppStatus
	4, // 9: docker_control.DockerControlService.ReloadNginx:output_type -> docker_control.ActionResult
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_docker_control_proto_init() }
func file_proto_docker_control_proto_init() {
	if File_proto_docker_control_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_docker_control_proto_rawDesc), len(file_proto_docker_control_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_docker_control_proto_goTypes,
		DependencyIndexes: file_proto_docker_control_proto_depIdxs,
		EnumInfos:         file_proto_docker_control_proto_enumTypes,
		MessageInfos:      file_proto_docker_control_proto_msgTypes,
	}.Build()
	File_proto_docker_control_proto = out.File
	file_proto_docker_control_proto_goTypes = nil
	file_proto_docker_control_proto_depIdxs = nil
}
