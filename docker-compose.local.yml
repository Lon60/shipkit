services:
  docker-control:
    build:
      context: ./docker-control
      dockerfile: Dockerfile
    environment:
      DOCKER_CONTROL_PORT: ${DOCKER_CONTROL_PORT}
      DOCKER_CONTROL_DEPLOYMENTS_DIR: /deployments
      DOCKER_CONTROL_LOG_LEVEL: ${DOCKER_CONTROL_LOG_LEVEL}
    networks: [shipkit]
    volumes:
      - docker_deployments:/deployments
      - ${DOCKER_SOCKET_PATH}:/var/run/docker.sock
    user: root

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: shipkit_gateway
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks: [shipkit]

  gateway-api:
    build:
      context: ./gateway-api
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - docker-control
    environment:
      DATABASE_URL: jdbc:postgresql://postgres:5432/shipkit_gateway
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION_MS: ${JWT_EXPIRATION_MS}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      DOCKER_CONTROL_HOST: docker-control
      DOCKER_CONTROL_PORT: ${DOCKER_CONTROL_PORT}
    networks: [shipkit]
    volumes:
      - nginx_dynamic:/nginx

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      - gateway-api
    environment:
      GRAPHQL_URL: ${GRAPHQL_URL}
      NEXT_PUBLIC_APP_NAME: ${NEXT_PUBLIC_APP_NAME}
    networks: [shipkit]

  nginx:
    image: nginx:1.25-alpine
    depends_on:
      - gateway-api
    ports:
      - "80:80"
    volumes:
      - ./scripts/nginx/snippets:/etc/nginx/snippets:ro
      - ./scripts/nginx/shipkit-default.conf:/etc/nginx/conf.d/default.conf:ro
    networks: [shipkit]

networks:
  shipkit:

volumes:
  postgres_data:
  docker_deployments:
  nginx_dynamic: 